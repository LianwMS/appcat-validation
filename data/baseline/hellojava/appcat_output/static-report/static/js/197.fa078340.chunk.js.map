{"version":3,"file":"static/js/197.fa078340.chunk.js","mappings":"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","sources":["pages/application-list/application-list.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  PageSection,\r\n  PageSectionVariants,\r\n  Split,\r\n  SplitItem,\r\n  Text,\r\n  TextContent,\r\n} from \"@patternfly/react-core\";\r\nimport {\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n} from \"@patternfly/react-table\";\r\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\r\n\r\nimport { ApplicationProcessed } from \"@app/models/api-enriched\";\r\nimport { useAllApplications } from \"@app/queries/report\";\r\nimport {\r\n  SimplePagination,\r\n  ConditionalTableBody,\r\n} from \"@app/shared/components\";\r\nimport {\r\n  useTable,\r\n  useTableControls,\r\n  useToolbar,\r\n} from \"@app/shared/hooks\";\r\n\r\nimport \"./application-list.css\";\r\n\r\nexport const compareByColumnIndex = (\r\n  a: ApplicationProcessed,\r\n  b: ApplicationProcessed,\r\n  columnIndex?: number\r\n) => {\r\n  switch (columnIndex) {\r\n    case 0: // name\r\n      return a.name.localeCompare(b.name);\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\nexport const ApplicationList: React.FC = () => {\r\n  const [filterText] = useState(\"\");\r\n  const { filters } = useToolbar<\r\n    \"tag\",\r\n    string\r\n  >();\r\n\r\n  const applications = useAllApplications();\r\n\r\n  const {\r\n    page: currentPage,\r\n    sortBy: currentSortBy,\r\n    changePage: onPageChange,\r\n    changeSortBy: onChangeSortBy,\r\n  } = useTableControls();\r\n\r\n  const { pageItems, filteredItems } = useTable<ApplicationProcessed>({\r\n    items: applications.data || [],\r\n    currentPage: currentPage,\r\n    currentSortBy: currentSortBy,\r\n    compareToByColumn: compareByColumnIndex,\r\n    filterItem: (item) => {\r\n      let isFilterTextFilterCompliant = true;\r\n      if (filterText && filterText.trim().length > 0) {\r\n        isFilterTextFilterCompliant =\r\n          item.name.toLowerCase().indexOf(filterText.toLowerCase()) !== -1;\r\n      }\r\n\r\n      let isTagFilterCompliant = true;\r\n      const selectedTags = filters.get(\"tag\") || [];\r\n      if (selectedTags.length > 0) {\r\n        isTagFilterCompliant = selectedTags.some((f) =>\r\n          item.tags.flatMap((t) => t.name).some((t) => f === t)\r\n        );\r\n      }\r\n\r\n      return isFilterTextFilterCompliant && isTagFilterCompliant;\r\n    },\r\n  });\r\n\r\n  // Reset pagination when application change\r\n  useEffect(() => {\r\n    onPageChange({ page: 1, perPage: currentPage.perPage });\r\n  }, [filters, onPageChange, currentPage.perPage]);\r\n\r\n  return (\r\n    <>\r\n      <PageSection variant={PageSectionVariants.light}>\r\n        <TextContent>\r\n          <Split hasGutter className=\"pf-v5-u-align-items-center\">\r\n            <SplitItem>\r\n              <Text component=\"h1\">Applications</Text>\r\n              <Text component=\"small\">\r\n                This report lists all analyzed applications. Select an individual\r\n                application to show more details.\r\n              </Text>\r\n            </SplitItem>\r\n            <SplitItem isFilled></SplitItem>\r\n            <SplitItem>\r\n              <Button\r\n                component=\"a\"\r\n                variant=\"primary\"\r\n                href=\"https://aka.ms/vscode-app-modernization\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"pf-v5-u-font-weight-bold\"\r\n              >\r\n                Ask Copilot\r\n                <ExternalLinkAltIcon className=\"pf-v5-u-ml-sm\" />\r\n              </Button>\r\n            </SplitItem>\r\n          </Split>\r\n        </TextContent>\r\n      </PageSection>\r\n      <PageSection variant={PageSectionVariants.default}>\r\n        <Table>\r\n          <Thead>\r\n            <Tr>\r\n              <Th\r\n                width={30}\r\n                sort={{\r\n                  columnIndex: 0,\r\n                  sortBy: { ...currentSortBy },\r\n                  onSort: onChangeSortBy,\r\n                }}\r\n              >\r\n                Name\r\n              </Th>\r\n              <Th width={10}>Issues</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <ConditionalTableBody\r\n            isNoData={filteredItems.length === 0}\r\n            numRenderedColumns={10}\r\n          >\r\n            {pageItems?.map((item, rowIndex) => {\r\n              return (\r\n                <Tbody key={rowIndex}>\r\n                  <Tr>\r\n                    <Td>\r\n                      <Link to={`/applications/${item.id}`}>{item.name}</Link>\r\n                    </Td>\r\n                    <Td>\r\n                      {item.issues.filter(issue => issue.issueCategory !== null && issue.issueCategory !== undefined && issue.issueCategory !== \"\").length}\r\n                    </Td>\r\n                  </Tr>\r\n                </Tbody>\r\n              );\r\n            })}\r\n          </ConditionalTableBody>\r\n        </Table>\r\n\r\n        <SimplePagination\r\n          count={filteredItems.length}\r\n          params={currentPage}\r\n          onChange={onPageChange}\r\n        />\r\n      </PageSection>\r\n    </>\r\n  );\r\n};\r\n"],"names":["compareByColumnIndex","a","b","columnIndex","name","localeCompare","ApplicationList","filterText","useState","filters","useToolbar","applications","useAllApplications","page","currentPage","sortBy","currentSortBy","changePage","onPageChange","changeSortBy","onChangeSortBy","useTableControls","pageItems","filteredItems","useTable","items","data","compareToByColumn","filterItem","item","isFilterTextFilterCompliant","trim","length","toLowerCase","indexOf","isTagFilterCompliant","selectedTags","get","some","f","tags","flatMap","t","useEffect","perPage","_jsxs","_Fragment","children","_jsx","PageSection","variant","PageSectionVariants","light","TextContent","Split","hasGutter","className","SplitItem","Text","component","isFilled","Button","href","target","rel","ExternalLinkAltIcon","default","Table","Thead","Tr","Th","width","sort","onSort","ConditionalTableBody","isNoData","numRenderedColumns","map","rowIndex","Tbody","Td","Link","to","concat","id","issues","filter","issue","issueCategory","undefined","SimplePagination","count","params","onChange"],"sourceRoot":""}