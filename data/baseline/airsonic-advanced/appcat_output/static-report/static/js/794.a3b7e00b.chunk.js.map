{"version":3,"file":"static/js/794.a3b7e00b.chunk.js","mappings":"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","sources":["../node_modules/@patternfly/react-styles/css/layouts/Gallery/gallery.mjs","../node_modules/@patternfly/react-tokens/dist/esm/l_gallery_GridTemplateColumns_min.js","../node_modules/@patternfly/react-tokens/dist/esm/l_gallery_GridTemplateColumns_max.js","../node_modules/@patternfly/react-core/src/layouts/Gallery/Gallery.tsx","../node_modules/@patternfly/react-core/src/layouts/Gallery/GalleryItem.tsx","../node_modules/@patternfly/react-core/src/components/Label/LabelGroup.tsx","pages/application-details/pages/technologies/technologies.tsx"],"sourcesContent":["import './gallery.css';\nexport default {\n  \"gallery\": \"pf-v5-l-gallery\",\n  \"modifiers\": {\n    \"gutter\": \"pf-m-gutter\"\n  }\n};","export const l_gallery_GridTemplateColumns_min = {\n  \"name\": \"--pf-v5-l-gallery--GridTemplateColumns--min\",\n  \"value\": \"250px\",\n  \"var\": \"var(--pf-v5-l-gallery--GridTemplateColumns--min)\"\n};\nexport default l_gallery_GridTemplateColumns_min;","export const l_gallery_GridTemplateColumns_max = {\n  \"name\": \"--pf-v5-l-gallery--GridTemplateColumns--max\",\n  \"value\": \"1fr\",\n  \"var\": \"var(--pf-v5-l-gallery--GridTemplateColumns--max)\"\n};\nexport default l_gallery_GridTemplateColumns_max;","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Gallery/gallery';\nimport cssGridTemplateColumnsMin from '@patternfly/react-tokens/dist/esm/l_gallery_GridTemplateColumns_min';\nimport cssGridTemplateColumnsMax from '@patternfly/react-tokens/dist/esm/l_gallery_GridTemplateColumns_max';\n\nexport interface GalleryProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the Gallery layout */\n  children?: React.ReactNode;\n  /** additional classes added to the Gallery layout */\n  className?: string;\n  /** Adds space between children. */\n  hasGutter?: boolean;\n  /** Minimum widths at various breakpoints. */\n  minWidths?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Maximum widths at various breakpoints. */\n  maxWidths?: {\n    default?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  /** Sets the base component to render. defaults to div */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n}\nexport const Gallery: React.FunctionComponent<GalleryProps> = ({\n  children = null,\n  className = '',\n  component = 'div',\n  hasGutter = false,\n  minWidths,\n  maxWidths,\n  ...props\n}: GalleryProps) => {\n  const minWidthStyles: any = {};\n  const Component: any = component;\n\n  if (minWidths) {\n    Object.entries(minWidths || {}).map(\n      ([breakpoint, value]) =>\n        (minWidthStyles[`${cssGridTemplateColumnsMin.name}${breakpoint !== 'default' ? `-on-${breakpoint}` : ''}`] =\n          value)\n    );\n  }\n  const maxWidthStyles: any = {};\n  if (maxWidths) {\n    Object.entries(maxWidths || {}).map(\n      ([breakpoint, value]) =>\n        (maxWidthStyles[`${cssGridTemplateColumnsMax.name}${breakpoint !== 'default' ? `-on-${breakpoint}` : ''}`] =\n          value)\n    );\n  }\n  const widthStyles = { ...minWidthStyles, ...maxWidthStyles };\n\n  return (\n    <Component\n      className={css(styles.gallery, hasGutter && styles.modifiers.gutter, className)}\n      {...props}\n      {...((minWidths || maxWidths) && { style: { ...widthStyles, ...props.style } as React.CSSProperties })}\n    >\n      {children}\n    </Component>\n  );\n};\nGallery.displayName = 'Gallery';\n","import * as React from 'react';\n\nexport interface GalleryItemProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the Gallery Item */\n  children?: React.ReactNode;\n  /** Sets the base component to render. defaults to div */\n  component?: React.ElementType<any> | React.ComponentType<any>;\n}\n\nexport const GalleryItem: React.FunctionComponent<GalleryItemProps> = ({\n  children = null,\n  component = 'div',\n  ...props\n}: GalleryItemProps) => {\n  const Component: any = component;\n\n  return <Component {...props}>{children}</Component>;\n};\nGalleryItem.displayName = 'GalleryItem';\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label-group';\nimport labelStyles from '@patternfly/react-styles/css/components/Label/label';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Label } from './Label';\nimport { Tooltip, TooltipPosition } from '../Tooltip';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { fillTemplate } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\n\nexport interface LabelGroupProps extends React.HTMLProps<HTMLUListElement> {\n  /** Content rendered inside the label group. Should be <Label> elements. */\n  children?: React.ReactNode;\n  /** Additional classes added to the label item */\n  className?: string;\n  /** Flag for having the label group default to expanded */\n  defaultIsOpen?: boolean;\n  /** Customizable \"Show Less\" text string */\n  expandedText?: string;\n  /** Customizeable template string. Use variable \"${remaining}\" for the overflow label count. */\n  collapsedText?: string;\n  /** Category name text for the label group category.  If this prop is supplied the label group with have a label and category styling applied */\n  categoryName?: string;\n  /** Aria label for label group that does not have a category name */\n  'aria-label'?: string;\n  /** Set number of labels to show before overflow */\n  numLabels?: number;\n  /** Flag if label group can be closed */\n  isClosable?: boolean;\n  /** Flag indicating the labels in the group are compact */\n  isCompact?: boolean;\n  /** Aria label for close button */\n  closeBtnAriaLabel?: string;\n  /** Function that is called when clicking on the label group close button */\n  onClick?: (event: React.MouseEvent) => void;\n  /** Position of the tooltip which is displayed if the category name text is longer */\n  tooltipPosition?:\n    | TooltipPosition\n    | 'auto'\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'left-start'\n    | 'left-end'\n    | 'right-start'\n    | 'right-end';\n  /** Flag to implement a vertical layout */\n  isVertical?: boolean;\n  /** Flag indicating contained labels are editable. Allows spacing for a text input after the labels. */\n  isEditable?: boolean;\n  /** Flag indicating the editable label group should be appended with a textarea. */\n  hasEditableTextArea?: boolean;\n  /** Additional props passed to the editable textarea. */\n  editableTextAreaProps?: any;\n  /** Control for adding new labels */\n  addLabelControl?: React.ReactNode;\n}\n\ninterface LabelGroupState {\n  isOpen: boolean;\n  isTooltipVisible: boolean;\n}\n\nclass LabelGroup extends React.Component<LabelGroupProps, LabelGroupState> {\n  static displayName = 'LabelGroup';\n  constructor(props: LabelGroupProps) {\n    super(props);\n    this.state = {\n      isOpen: this.props.defaultIsOpen,\n      isTooltipVisible: false\n    };\n  }\n  private headingRef = React.createRef<HTMLSpanElement>();\n\n  static defaultProps: LabelGroupProps = {\n    expandedText: 'Show Less',\n    collapsedText: '${remaining} more',\n    categoryName: '',\n    defaultIsOpen: false,\n    numLabels: 3,\n    isClosable: false,\n    isCompact: false,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onClick: (_e: React.MouseEvent) => undefined as any,\n    closeBtnAriaLabel: 'Close label group',\n    tooltipPosition: 'top',\n    'aria-label': 'Label group category',\n    isVertical: false,\n    isEditable: false,\n    hasEditableTextArea: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      isTooltipVisible: Boolean(\n        this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth\n      )\n    });\n  }\n\n  toggleCollapse = () => {\n    this.setState((prevState) => ({\n      isOpen: !prevState.isOpen,\n      isTooltipVisible: Boolean(\n        this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth\n      )\n    }));\n  };\n\n  renderLabel(id: string) {\n    const { categoryName, tooltipPosition } = this.props;\n    const { isTooltipVisible } = this.state;\n    return isTooltipVisible ? (\n      <Tooltip position={tooltipPosition} content={categoryName}>\n        <span tabIndex={0} ref={this.headingRef} className={css(styles.labelGroupLabel)}>\n          <span aria-hidden=\"true\" id={id}>\n            {categoryName}\n          </span>\n        </span>\n      </Tooltip>\n    ) : (\n      <span ref={this.headingRef} className={css(styles.labelGroupLabel)} aria-hidden=\"true\" id={id}>\n        {categoryName}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      categoryName,\n      children,\n      className,\n      isClosable,\n      isCompact,\n      closeBtnAriaLabel,\n      'aria-label': ariaLabel,\n      onClick,\n      numLabels,\n      expandedText,\n      collapsedText,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      defaultIsOpen,\n      tooltipPosition,\n      isVertical,\n      isEditable,\n      hasEditableTextArea,\n      editableTextAreaProps,\n      addLabelControl,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n    const { isOpen } = this.state;\n    const renderedChildren = React.Children.toArray(children);\n    const numChildren = renderedChildren.length;\n    const collapsedTextResult = fillTemplate(collapsedText as string, {\n      remaining: numChildren - numLabels\n    });\n\n    const renderLabelGroup = (id: string) => {\n      const labelArray = !isOpen ? renderedChildren.slice(0, numLabels) : renderedChildren;\n\n      const content = (\n        <React.Fragment>\n          {categoryName && this.renderLabel(id)}\n          <ul\n            className={css(styles.labelGroupList)}\n            {...(categoryName && { 'aria-labelledby': id })}\n            {...(!categoryName && { 'aria-label': ariaLabel })}\n            role=\"list\"\n            {...rest}\n          >\n            {labelArray.map((child, i) => (\n              <li className={css(styles.labelGroupListItem)} key={i}>\n                {child}\n              </li>\n            ))}\n            {numChildren > numLabels && (\n              <li className={css(styles.labelGroupListItem)}>\n                <Label\n                  isOverflowLabel\n                  onClick={this.toggleCollapse}\n                  className={css(isCompact && labelStyles.modifiers.compact)}\n                >\n                  {isOpen ? expandedText : collapsedTextResult}\n                </Label>\n              </li>\n            )}\n            {addLabelControl && <li className={css(styles.labelGroupListItem)}>{addLabelControl}</li>}\n            {isEditable && hasEditableTextArea && (\n              <li className={css(styles.labelGroupListItem, styles.modifiers.textarea)}>\n                <textarea className={css(styles.labelGroupTextarea)} rows={1} tabIndex={0} {...editableTextAreaProps} />\n              </li>\n            )}\n          </ul>\n        </React.Fragment>\n      );\n\n      const close = (\n        <div className={css(styles.labelGroupClose)}>\n          <Button\n            variant=\"plain\"\n            aria-label={closeBtnAriaLabel}\n            onClick={onClick}\n            id={`remove_group_${id}`}\n            aria-labelledby={`remove_group_${id} ${id}`}\n          >\n            <TimesCircleIcon aria-hidden=\"true\" />\n          </Button>\n        </div>\n      );\n\n      return (\n        <div\n          className={css(\n            styles.labelGroup,\n            className,\n            categoryName && styles.modifiers.category,\n            isVertical && styles.modifiers.vertical,\n            isEditable && styles.modifiers.editable\n          )}\n        >\n          {<div className={css(styles.labelGroupMain)}>{content}</div>}\n          {isClosable && close}\n        </div>\n      );\n    };\n\n    return numChildren === 0 && addLabelControl === undefined ? null : (\n      <GenerateId>{(randomId) => renderLabelGroup(this.props.id || randomId)}</GenerateId>\n    );\n  }\n}\n\nexport { LabelGroup };\n","import { useMemo } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Divider,\r\n  EmptyState,\r\n  EmptyStateIcon,\r\n  EmptyStateVariant,\r\n  Gallery,\r\n  GalleryItem,\r\n  Label,\r\n  LabelGroup,\r\n  PageSection,\r\n  Title,\r\n} from \"@patternfly/react-core\";\r\nimport InfoAltIcon from \"@patternfly/react-icons/dist/esm/icons/info-alt-icon\";\r\n\r\nimport { ApplicationProcessed } from \"@app/models/api-enriched\";\r\n\r\nimport { TagDto } from \"@app/api/report\";\r\n\r\nexport const Technologies: React.FC = () => {\r\n  const application = useOutletContext<ApplicationProcessed | null>();\r\n\r\n  const allTags: TagDto[] = useMemo(() => application?.tags || [], [application])\r\n\r\n  const tagsByCategory: {[key: string]: string[]} = allTags.reduce<{[key: string]: string[]}>((acc, tag) => {\r\n    acc[tag.category.name] = acc[tag.category.name] ? [...acc[tag.category.name], tag.name] : [tag.name];\r\n    return acc\r\n  }, {})\r\n\r\n  const sortedTagsByCategory = Object.entries(tagsByCategory).sort((a, b) => \r\n    a[0] === \"Uncategorized\" ? 1 : (a[1] ? (b[1] ? a[1].length - b[1].length:0):0))\r\n\r\n  return (\r\n    <>\r\n      <PageSection>\r\n        <Gallery hasGutter minWidths={{ md: \"400px\" }}>\r\n          {sortedTagsByCategory.map(([category, tags], index) => (\r\n            <GalleryItem key={index}>\r\n              <Card isFullHeight>\r\n                <CardTitle>\r\n                  {category}\r\n                </CardTitle>\r\n                <Divider />\r\n                <CardBody>\r\n                  {\r\n                    tags.length > 0 ? (\r\n                      <LabelGroup numLabels={5}>\r\n                        {\r\n                          tags.map((value, tagIndex) => \r\n                            <Label variant=\"outline\">{value}</Label>)\r\n                        }\r\n                      </LabelGroup>\r\n                    ) : (\r\n                      <EmptyState variant={EmptyStateVariant.sm}>\r\n                        <EmptyStateIcon icon={InfoAltIcon} />\r\n                        <Title headingLevel=\"h4\" size=\"md\">\r\n                          No data to show\r\n                        </Title>\r\n                      </EmptyState>\r\n                    )\r\n                  }\r\n                </CardBody>\r\n              </Card>\r\n            </GalleryItem>\r\n          ))}\r\n        </Gallery>\r\n      </PageSection>\r\n    </>\r\n  );\r\n};\r\n"],"names":["Gallery","_a","children","className","component","hasGutter","minWidths","maxWidths","props","__rest","minWidthStyles","Component","Object","entries","map","_ref","breakpoint","value","concat","cssGridTemplateColumnsMin","name","maxWidthStyles","_ref2","cssGridTemplateColumnsMax","widthStyles","assign","React","css","styles","gutter","style","displayName","GalleryItem","LabelGroup","constructor","super","headingRef","toggleCollapse","this","setState","prevState","isOpen","isTooltipVisible","Boolean","current","offsetWidth","scrollWidth","state","defaultIsOpen","componentDidMount","renderLabel","id","categoryName","tooltipPosition","Tooltip","position","content","tabIndex","ref","labelGroupLabel","render","isClosable","isCompact","closeBtnAriaLabel","ariaLabel","onClick","numLabels","expandedText","collapsedText","isVertical","isEditable","hasEditableTextArea","editableTextAreaProps","addLabelControl","rest","renderedChildren","toArray","numChildren","length","collapsedTextResult","fillTemplate","remaining","renderLabelGroup","labelArray","slice","labelGroupList","role","child","i","labelGroupListItem","key","Label","isOverflowLabel","labelStyles","modifiers","compact","textarea","labelGroupTextarea","rows","close","labelGroupClose","Button","variant","TimesCircleIcon","labelGroup","category","vertical","editable","labelGroupMain","undefined","GenerateId","randomId","defaultProps","_e","Technologies","application","useOutletContext","tagsByCategory","useMemo","tags","reduce","acc","tag","sortedTagsByCategory","sort","a","b","_jsx","_Fragment","PageSection","md","index","_jsxs","Card","isFullHeight","CardTitle","Divider","CardBody","tagIndex","EmptyState","EmptyStateVariant","sm","EmptyStateIcon","icon","InfoAltIcon","Title","headingLevel","size"],"sourceRoot":""}